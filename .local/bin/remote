#!/bin/sh
#
# Manage remotes
# TODO ssh key management, improve `case`

help() {
    echo "Usage: remote OPTION USERNAME

Options:
-s: ssh -- shell
-f: sftp -- file transfer
-m: sshfs -- mount remote
-u: fusermount3 -u -- umount remote" && exit
    }

umount() {
	[ "$1" = "-u" ] && [ -f $mount_point ]  ||  fusermount3 -u $mount_point && unlink $HOME/mnt && echo "Remote unmounted" || echo "Nothing mounted on $mount_point" ; exit
}

mount_point=$XDG_DATA_HOME/mnt
usernames_path=$HOME/.ssh/usernames

mkdir -p "$mount_point"
[ -f "$usernames_path" ] || echo "Error: No file at $usernames_path, please provide second argument or create one"
[ -z ${1+x} ] && help

[ "$1" = "-u" ] && umount "$@"

[ -z ${2+x} ] && [ -f "$usernames_path" ] && username=$(fzf < "$usernames_path" ) || username=$2
[ -z "$username" ] && help

host=$(tr "," "\n" < "$HOME"/.ssh/known_hosts | tr -d "[" | cut -d" " -f1 | fzf)

case $1 in
    -s)         ssh "$username"@"$host" ;;
    -f)         sftp "$username"@"$host" ;;
    -m)         sshfs "$username"@"$host":/ "$mount_point" && ln -s "$mount_point" "$HOME"/mnt && echo "Remote successfully mounted at $HOME/mnt" ;;
    *)          help ;;
esac


### From LARBS to update option handling
# while getopts ":a:r:b:p:h" o; do case "${o}" in
# 	h) printf "Optional arguments for custom use:\\n  -r: Dotfiles repository (local file or url)\\n  -p: Dependencies and programs csv (local file or url)\\n  -a: AUR helper (must have pacman-like syntax)\\n  -h: Show this message\\n" && exit 1 ;;
# 	r) dotfilesrepo=${OPTARG} && git ls-remote "$dotfilesrepo" || exit 1 ;;
# 	b) repobranch=${OPTARG} ;;
# 	p) progsfile=${OPTARG} ;;
# 	a) aurhelper=${OPTARG} ;;
# 	*) printf "Invalid option: -%s\\n" "$OPTARG" && exit 1 ;;
# esac done
#
# [ -z "$dotfilesrepo" ] && dotfilesrepo="https://github.com/lukesmithxyz/voidrice.git"
# [ -z "$progsfile" ] && progsfile="https://raw.githubusercontent.com/LukeSmithxyz/LARBS/master/progs.csv"
# [ -z "$aurhelper" ] && aurhelper="yay"
# [ -z "$repobranch" ] && repobranch="master"
